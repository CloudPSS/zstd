name: build

on:
  workflow_call:

jobs:
  build-common:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install
        uses: ./.github/actions/install
        with:
          args: --ignore-scripts

      - name: Build
        run: pnpm build

      - name: Build deps
        run: pnpm build:deps

      - name: Upload common artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-common
          path: |
            lib/zstd.c
            dist/

  build-wasm:
    needs: build-common
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install
        with:
          args: --ignore-scripts

      - name: Download common artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-common

      - name: Build wasm
        run: pnpm build:wasm

      - name: Upload prebuild artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-wasm
          path: prebuilds/zstd.js

  build-windows:
    needs: build-common
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install
        with:
          args: --ignore-scripts

      - name: Download common artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-common

      - name: Prebuildify arm64
        run: pnpm build:gyp --arch arm64
      - name: Prebuildify x64
        run: pnpm build:gyp --arch x64

      - name: Upload prebuild artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-windows
          path: prebuilds/

  build-linux:
    needs: build-common
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install
        with:
          args: --ignore-scripts

      - name: Download common artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-common

      # https://github.com/prebuild/docker-images?tab=readme-ov-file#images
      - name: Prebuildify x64 glibc
        run: pnpm build:gyp-cross                  -i centos7-devtoolset7
      - name: Prebuildify x64 musl
        run: pnpm build:gyp-cross                  -i alpine
      - name: Prebuildify arm64 glibc
        run: pnpm build:gyp-cross --tag-libc glibc -i linux-arm64-lts
      - name: Prebuildify arm64 musl
        run: pnpm build:gyp-cross --tag-libc musl  -i linux-arm64-musl

      - name: Upload prebuild artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-linux
          path: prebuilds/

  build-macos:
    needs: build-common
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install
        with:
          args: --ignore-scripts

      - name: Download common artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-common

      - name: Prebuildify arm64
        run: pnpm build:gyp --arch arm64
      - name: Prebuildify x64
        run: pnpm build:gyp --arch x64

      - name: Upload prebuild artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-macos
          path: prebuilds/

  pack:
    needs: [build-common, build-linux, build-macos, build-windows, build-wasm]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download common artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-common

      - name: Download prebuilt artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: prebuilds-*
          path: prebuilds/
          merge-multiple: true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            lib/zstd.c
            prebuilds/
            dist/

  test:
    needs: pack
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        node: ['lts/-1', 'lts/*', 'latest']
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build

      - name: Install
        uses: ./.github/actions/install
        with:
          node-version: ${{ matrix.node }}
          args: --ignore-scripts

      - name: Run test with prebuilds
        run: pnpm test

      - name: Send coverage report
        uses: codacy/codacy-coverage-reporter-action@v1
        if: github.secret_source == 'Actions'
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
